# 使序列递增的最小交换次数
# 我们有两个长度相等且不为空的整型数组 A 和 B 。
#
# 我们可以交换 A[i] 和 B[i] 的元素。注意这两个元素在各自的序列中应该处于相同的位置。
#
# 在交换过一些元素之后，数组 A 和 B 都应该是严格递增的（数组严格递增的条件仅为A[0] < A[1] < A[2] < ... < A[A.length - 1]）。
#
# 给定数组 A 和 B ，请返回使得两个数组均保持严格递增状态的最小交换次数。假设给定的输入总是有效的。
#
# 示例:
# 输入: A = [1,3,5,4], B = [1,2,3,7]
# 输出: 1
# 解释:
# 交换 A[3] 和 B[3] 后，两个数组如下:
# A = [1, 3, 5, 7] ， B = [1, 2, 3, 4]
# 两个数组均为严格递增的。

A = [1, 3, 5, 4, 9]
B = [1, 2, 3, 7, 10]

length = len(A)
n = [float('inf')] * length
s = [float('inf')] * length
n[0] = 1
s[0] = 0

for i in range(1, length):
    if A[i] > A[i - 1] and B[i] > B[i - 1]:
        # i位不交换
        s[i] = s[i - 1]
        # i位交换
        n[i] = n[i - 1] + 1

    if A[i] > B[i - 1] and B[i] > A[i - 1]:
        # i位不交换,则i-1位交换
        s[i] = min(n[i - 1], s[i])

        # i位交换，则i-1位不交换
        n[i] = min(s[i - 1] + 1, n[i])

print(n)
print(s)